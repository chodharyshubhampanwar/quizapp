{"version":3,"sources":["App.js","index.js"],"names":["App","questions","questionText","answerOptions","answerText","isCorrect","useState","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","showprev","setShowprev","shownext","setShownext","next","nextQuestion","length","className","map","answerOption","onClick","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAEe,SAASA,IACvB,IAAMC,EAAY,CACjB,CACCC,aAAc,iCACdC,cAAe,CACd,CAAEC,WAAY,WAAYC,WAAW,GACrC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,SAAUC,WAAW,KAGrC,CACCH,aAAc,uBACdC,cAAe,CACd,CAAEC,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,YAAaC,WAAW,GACtC,CAAED,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,aAAcC,WAAW,KAGzC,CACCH,aAAc,2CACdC,cAAe,CACd,CAAEC,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,YAAaC,WAAW,KAGxC,CACCH,aAAc,yCACdC,cAAe,CACd,CAAEC,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,MAnCJ,EAwCiBC,mBAAS,GAxC1B,mBAwCtBC,EAxCsB,KAwCLC,EAxCK,OAyCKF,oBAAS,GAzCd,mBAyCtBG,EAzCsB,KAyCXC,EAzCW,OA0CHJ,mBAAS,GA1CN,mBA0CtBK,EA1CsB,KA0CfC,EA1Ce,OA2CEN,oBAAS,GA3CX,mBA2CtBO,EA3CsB,KA2CbC,EA3Ca,OA4CER,oBAAS,GA5CX,mBA4CtBS,EA5CsB,KA4CbC,EA5Ca,KAyDvBC,EAAO,WACZ,IAAMC,EAAeX,EAAkB,EACnCW,EAAejB,EAAUkB,OAC5BX,EAAmBU,IAGnBR,GAAa,GACbM,GAAaD,GACbD,GAAaD,KAcf,OAAQ,oCACP,yBAAKO,UAAU,OACbX,EACA,yBAAKW,UAAU,iBAAf,cACaT,EADb,WAC4BV,EAAUkB,QAGtC,oCACC,yBAAKC,UAAU,oBACd,yBAAKA,UAAU,kBACd,0CAAgBb,EAAkB,GADnC,IAC8CN,EAAUkB,QAExD,yBAAKC,UAAU,iBAAiBnB,EAAUM,GAAiBL,eAE5D,yBAAKkB,UAAU,kBACbnB,EAAUM,GAAiBJ,cAAckB,KAAI,SAACC,GAAD,OAC7C,4BAAQC,QAAS,kBAA8BD,EAAajB,WAtBhEO,EAASD,EAAQ,QAGlBM,MAmB8EK,EAAalB,kBAO3F,6BACCS,EAAS,4BAAQU,QAzDN,WAEXf,EADoBD,EAAkB,GAGd,IAApBA,GACHO,GAAaD,IAoDkBW,SAA8B,IAApBjB,GAAjC,QAAuE,KAChFQ,EAAS,4BAAQQ,QAASN,GAAjB,QAAsC,OCrGlDQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC3B,EAAD,OAEF4B,SAASC,eAAe,U","file":"static/js/main.26a56c9b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function App() {\r\n\tconst questions = [\r\n\t\t{\r\n\t\t\tquestionText: 'What is the capital of France?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'New York', isCorrect: false },\r\n\t\t\t\t{ answerText: 'London', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Paris', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Dublin', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'Who is CEO of Tesla?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'The iPhone was created by which company?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'How many Harry Potter books are there?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: '1', isCorrect: false },\r\n\t\t\t\t{ answerText: '4', isCorrect: false },\r\n\t\t\t\t{ answerText: '6', isCorrect: false },\r\n\t\t\t\t{ answerText: '7', isCorrect: true },\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\tconst [showprev,setShowprev] = useState(true)\r\n\tconst [shownext,setShownext] = useState(true)\r\n\r\n\tconst prev = () => {\r\n\t\tconst prevQuestion = currentQuestion - 1;\r\n\t\t\tsetCurrentQuestion(prevQuestion);\r\n\r\n\t\t\tif (currentQuestion === 1) {\r\n\t\t\t\tsetShowprev(!showprev)\r\n\r\n\t\t\t}\r\n\t\t\t\r\n\t}\r\n\r\n\tconst next = () => {\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < questions.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t\tsetShownext(!shownext)\r\n\t\t\tsetShowprev(!showprev)\r\n\t\t}\r\n\t};\r\n\r\n\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tnext()\r\n\t};\r\n\r\n\treturn (<>\r\n\t\t<div className='app'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of {questions.length}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t\t\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t{showprev?<button onClick={prev} disabled={currentQuestion === 0}>prev</button>: null}\r\n\t\t{shownext?<button onClick={next}>next</button>: null}\r\n\t</div>\r\n\t</>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}