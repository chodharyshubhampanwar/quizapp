{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shara\\\\Desktop\\\\quizapp\\\\client\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nexport default function App() {\n  const questions = [{\n    questionText: 'What is the capital of France?',\n    answerOptions: [{\n      answerText: 'New York',\n      isCorrect: false\n    }, {\n      answerText: 'London',\n      isCorrect: false\n    }, {\n      answerText: 'Paris',\n      isCorrect: true\n    }, {\n      answerText: 'Dublin',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'Who is CEO of Tesla?',\n    answerOptions: [{\n      answerText: 'Jeff Bezos',\n      isCorrect: false\n    }, {\n      answerText: 'Elon Musk',\n      isCorrect: true\n    }, {\n      answerText: 'Bill Gates',\n      isCorrect: false\n    }, {\n      answerText: 'Tony Stark',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'The iPhone was created by which company?',\n    answerOptions: [{\n      answerText: 'Apple',\n      isCorrect: true\n    }, {\n      answerText: 'Intel',\n      isCorrect: false\n    }, {\n      answerText: 'Amazon',\n      isCorrect: false\n    }, {\n      answerText: 'Microsoft',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'How many Harry Potter books are there?',\n    answerOptions: [{\n      answerText: '1',\n      isCorrect: false\n    }, {\n      answerText: '4',\n      isCorrect: false\n    }, {\n      answerText: '6',\n      isCorrect: false\n    }, {\n      answerText: '7',\n      isCorrect: true\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [showprev, setShowprev] = useState(true);\n  const [shownext, setShownext] = useState(true);\n\n  const prev = () => {\n    const prevQuestion = currentQuestion - 1;\n    setCurrentQuestion(prevQuestion);\n\n    if (currentQuestion === 1) {\n      setShowprev(!showprev);\n    }\n  };\n\n  const next = () => {\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n      setShownext(!shownext);\n      setShowprev();\n    }\n  };\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    next();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 3\n    }\n  }, showScore ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"score-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, \"You scored \", score, \" out of \", questions.length) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 8\n    }\n  }, \"Question \", currentQuestion + 1), \"/\", questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, questions[currentQuestion].questionText)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 6\n    }\n  }, questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleAnswerOptionClick(answerOption.isCorrect),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 8\n    }\n  }, answerOption.answerText))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 3\n    }\n  }, showprev ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: prev,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"prev\") : null, shownext ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: next,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"next\") : null));\n}","map":{"version":3,"sources":["C:/Users/shara/Desktop/quizapp/client/src/App.js"],"names":["React","useState","App","questions","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","showprev","setShowprev","shownext","setShownext","prev","prevQuestion","next","nextQuestion","length","handleAnswerOptionClick","map","answerOption"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function App() {\r\n\tconst questions = [\r\n\t\t{\r\n\t\t\tquestionText: 'What is the capital of France?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'New York', isCorrect: false },\r\n\t\t\t\t{ answerText: 'London', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Paris', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Dublin', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'Who is CEO of Tesla?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'The iPhone was created by which company?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'How many Harry Potter books are there?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: '1', isCorrect: false },\r\n\t\t\t\t{ answerText: '4', isCorrect: false },\r\n\t\t\t\t{ answerText: '6', isCorrect: false },\r\n\t\t\t\t{ answerText: '7', isCorrect: true },\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\tconst [showprev,setShowprev] = useState(true)\r\n\tconst [shownext,setShownext] = useState(true)\r\n\r\n\tconst prev = () => {\r\n\t\tconst prevQuestion = currentQuestion - 1;\r\n\t\t\tsetCurrentQuestion(prevQuestion);\r\n\r\n\t\t\tif (currentQuestion === 1) {\r\n\t\t\t\tsetShowprev(!showprev)\r\n\t\t\t}\r\n\t\t\t\r\n\t}\r\n\r\n\tconst next = () => {\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < questions.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t\tsetShownext(!shownext)\r\n\t\t\tsetShowprev()\r\n\t\t}\r\n\t};\r\n\r\n\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tnext()\r\n\t};\r\n\r\n\treturn (<>\r\n\t\t<div className='app'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of {questions.length}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t\t\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t{showprev?<button onClick={prev} >prev</button>: null}\r\n\t\t{shownext?<button onClick={next}>next</button>: null}\r\n\t</div>\r\n\t</>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}